[pytest]
# Minimum pytest version
minversion = 6.0

# Test discovery
testpaths = tests
pythonpath = src
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers (use --strict-markers to catch typos)
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    fast: marks tests as fast unit tests
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    external: marks tests requiring external data or resources
    gpu: marks tests requiring GPU
    redis: marks tests requiring Redis connection
    benchmark: marks tests for benchmarking
    perf: marks tests as performance benchmarks
    asyncio: marks tests as asynchronous

# Default test run configuration
addopts =
    --strict-markers
    -ra
    --tb=short
    -m "not slow and not gpu and not external"
    --durations=10
    # Disable multiprocessing in libraries to prevent hangs
    -p no:cacheprovider
    # Use importlib mode to avoid import conflicts
    --import-mode=importlib

# Configure asyncio mode
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Timeout to prevent hanging tests
# Default timeout for all tests
timeout = 300
timeout_method = thread
# Use markers to control test selection:
# pytest -m "not slow" for fast tests
# pytest -m "integration" for integration tests

# Warning filters
filterwarnings =
    # Ignore known warnings
    ignore::DeprecationWarning:pydantic._internal
    ignore::UserWarning
    ignore::RuntimeWarning:numpy
    ignore::RuntimeWarning:mne
    # Ignore YASA's numpy trapz deprecation (third-party library)
    ignore:`trapz` is deprecated.*:DeprecationWarning:yasa.staging

# Output options
console_output_style = progress
junit_family = xunit2
