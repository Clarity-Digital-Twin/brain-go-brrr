# Pre-commit hooks configuration for Brain Go Brrr
# Modern 2025 setup with ruff, mypy, and notebook support

repos:
  # Ruff - Modern Python linter and formatter (replaces black, isort, flake8, etc.)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.4
    hooks:
      - id: ruff
        name: ruff (lint)
        args: [--fix, --exit-non-zero-on-fix]
        types_or: [python, pyi, jupyter]
        exclude: ^(reference_repos/|data/|\.venv/|build/|dist/)
      - id: ruff-format
        name: ruff (format)
        types_or: [python, pyi, jupyter]
        exclude: ^(reference_repos/|data/|\.venv/|build/|dist/)

  # Type checking with mypy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.17.0
    hooks:
      - id: mypy
        name: mypy (type check)
        additional_dependencies: [pydantic, types-requests]
        args: [--ignore-missing-imports, --scripts-are-modules]
        exclude: ^(reference_repos/|data/|\.venv/|build/|dist/|literature/)

  # Notebook quality checks
  - repo: https://github.com/nbQA-dev/nbQA
    rev: 1.9.1
    hooks:
      - id: nbqa-ruff
        name: nbqa-ruff (notebook lint)
        args: [--fix, --exit-non-zero-on-fix]
        exclude: ^(reference_repos/|data/|\.venv/|build/|dist/|literature/)
      - id: nbqa-ruff-format
        name: nbqa-ruff-format (notebook format)
        exclude: ^(reference_repos/|data/|\.venv/|build/|dist/|literature/)

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
        name: trim trailing whitespace
        exclude: ^(reference_repos/|data/)
      - id: end-of-file-fixer
        name: fix end of files
        exclude: ^(reference_repos/|data/)
      - id: check-yaml
        name: check yaml
      - id: check-toml
        name: check toml
      - id: check-json
        name: check json
      - id: check-added-large-files
        name: check for added large files
        args: [--maxkb=10000]
      - id: check-merge-conflict
        name: check for merge conflicts
      - id: check-case-conflict
        name: check for case conflicts
      - id: mixed-line-ending
        name: check for mixed line endings
      - id: check-executables-have-shebangs
        name: check executables have shebangs

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        name: bandit (security check)
        args: ["-c", "pyproject.toml", "-x", "tests/"]
        additional_dependencies: ["bandit[toml]"]
        exclude: ^(reference_repos/|data/|\.venv/|build/|dist/|literature/)

  # Documentation checks
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        name: pydocstyle (docstring check)
        args: [--convention=google]
        additional_dependencies: [toml]
        exclude: ^(reference_repos/|data/|\.venv/|build/|dist/|literature/)

  # Configuration file sorting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        name: prettier (format configs)
        types_or: [yaml, markdown, json]
        exclude: ^(\.github/|docs/|literature/|reference_repos/|data/)

  # Commit message formatting
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v4.8.3
    hooks:
      - id: commitizen
        name: commitizen check
        stages: [commit-msg]

  # Additional Python checks
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.20.0
    hooks:
      - id: pyupgrade
        name: pyupgrade (modernize syntax)
        args: [--py311-plus]
        exclude: ^(reference_repos/|data/|\.venv/|build/|dist/|literature/)

  # Machine Learning specific checks
  - repo: local
    hooks:
      - id: check-model-files
        name: check model files not committed
        entry: python -c "import sys; sys.exit(0 if all('.pt' not in f and '.pth' not in f and '.h5' not in f for f in sys.argv[1:]) else 1)"
        language: system
        files: \.(pt|pth|h5|hdf5|pkl|pickle)$
        stages: [pre-commit]

      - id: check-data-files
        name: check large data files not committed
        entry: python -c "import sys; sys.exit(0 if all('.csv' not in f and '.parquet' not in f for f in sys.argv[1:]) else 1)"
        language: system
        files: \.(csv|parquet|feather)$
        stages: [pre-commit]

# Configuration for specific tools
default_language_version:
  python: python3.11

ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ""
  autoupdate_commit_msg: "[pre-commit.ci] pre-commit autoupdate"
  autoupdate_schedule: weekly
  skip: []
  submodules: false
