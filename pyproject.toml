[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
package = true
dev-dependencies = [
    "pytest>=8.0.0",
    "pytest-cov>=5.0.0",
    "pytest-xdist>=3.5.0",
    "pytest-benchmark>=4.0.0",
    "hypothesis>=6.92.0",
    "ruff>=0.2.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "ipython>=8.19.0",
    "jupyter>=1.0.0",
    "notebook>=7.0.0",
    "jupyterlab>=4.0.0",
    "nbqa>=1.7.0",
    "dvc>=3.0.0",
    "mlflow>=2.10.0",
    "dvc-s3>=3.0.0",
]

[project]
name = "brain-go-brrr"
version = "0.1.0"
description = "A digital twin brain-computer interface project focused on EEG signal processing and neural representation learning"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "Apache-2.0"}
authors = [
    {name = "CLARITY-DIGITAL-TWIN", email = "contact@clarity-digital-twin.org"},
]
keywords = ["eeg", "bci", "brain-computer-interface", "transformers", "neural-signals", "digital-twin"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]

dependencies = [
    "torch>=2.2.0",
    "numpy>=1.26.0",
    "scipy>=1.12.0",
    "mne>=1.6.0",
    "pandas>=2.2.0",
    "scikit-learn>=1.4.0",
    "einops>=0.7.0",
    "transformers>=4.37.0",
    "accelerate>=0.26.0",
    "lightning>=2.1.0",
    "wandb>=0.16.0",
    "hydra-core>=1.3.0",
    "omegaconf>=2.3.0",
    "rich>=13.7.0",
    "typer>=0.9.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "yasa>=0.6.5",
    "autoreject>=0.4.0",
    "lightgbm>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.5.0",
    "pytest-benchmark>=4.0.0",
    "hypothesis>=6.92.0",
    "ruff>=0.1.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "ipython>=8.19.0",
    "jupyter>=1.0.0",
    "notebook>=7.0.0",
    "jupyterlab>=4.0.0",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.5.0",
    "mkdocstrings[python]>=0.24.0",
    "mkdocs-jupyter>=0.24.0",
]

viz = [
    "matplotlib>=3.8.0",
    "seaborn>=0.13.0",
    "plotly>=5.18.0",
    "dash>=2.14.0",
]

[project.urls]
Documentation = "https://clarity-digital-twin.github.io/brain-go-brrr"
Repository = "https://github.com/Clarity-Digital-Twin/brain-go-brrr"
Issues = "https://github.com/Clarity-Digital-Twin/brain-go-brrr/issues"

[project.scripts]
brain-go-brrr = "brain_go_brrr.cli:app"

[tool.ruff]
line-length = 100
target-version = "py311"
extend-include = ["*.ipynb"]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
    "RUF",  # Ruff-specific rules
    "PTH",  # flake8-use-pathlib
    "N",    # pep8-naming
]
ignore = ["E501", "B008", "RUF012"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ARG"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--cov=brain_go_brrr",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "-n=auto",
]

[tool.coverage.run]
source = ["src/brain_go_brrr"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.hatch.version]
path = "src/brain_go_brrr/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
]

[tool.hatch.build.targets.wheel]
packages = ["src/brain_go_brrr"]